Maven is a popular build automation tool for Java-based projects that helps manage and organize
the software development process.
It provides a standard way to define project dependencies, build processes, and project structure,
making it easier for developers to manage and maintain complex Java applications.
Maven uses a declarative approach to configuration and relies on XML files called "pom.xml" to
describe the project's structure, dependencies, and build process
It also offers a vast repository of open-source libraries and plugins that can be easily integrated into
projects.


Features of maven:
Dependency Management
Project Standardization
Build Automation
Plugin System
Consistent Builds
Integration with IDEs



Use Intellij or Eclipse 
Adding dependencies in pom.xml
Lifecycle of maven(used install)
Check right end(named maven) you'll get all the stages of lifecycle


Plugins(2 types:build & reporting)
Check right end(named plugin) you'll find all the list of core plugins
->Used clean: it removed the target folder generated by last build(install)
->U need to add plugins inside the pom.xml(under build section)


Modules:
A project will be divided into several modules
Right click project -> new -> Module
While creating, u need to add the parent of the module
This module info will also be added in pom.xml file
(Need to specify the parent in module's pom.xml and need to specify the module info in main pom.xml)

For using methods/functions present in one module in another module,
U need to the dependency of the module that u want to use inside the pom.xml file of the module in which u r using it


For web app, during creation of project select "Maven ArchType"
